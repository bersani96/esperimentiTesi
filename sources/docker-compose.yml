version: '3'
services:

 # Prometheus server
  prometheus:
    build:
      context: ./prometheus-server
    container_name: prometheus
    ports:
     - "9090:9090"

 # Grafana
  grafana:
   build:
     context: ./grafana
   container_name: grafana
   ports:
     - "3000:3000"
   depends_on:
     - "prometheus"
   volumes:
     - ./grafana/dashboards:/var/lib/grafana/dashboards
     - ./grafana/provisioning/:/etc/grafana/provisioning/

  # Eureka
  eureka:
    build:
      context: ./eureka-server
    container_name: eureka

  # A
  a-service:
    build:
      context: ./template-service
    container_name: a-service
    environment:
      - spring.application.name=a
    depends_on:
      - "eureka"
      - "kafka"
      - "fluentd"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: a-service.allLog


  # B
  b-service:
    build:
      context: ./template-service
    container_name: b-service
    environment:
      - spring.application.name=b
    depends_on:
      - "eureka"
      - "kafka"
      - "fluentd"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: b-service.allLog

 # C
 c-service:
   build:
     context: ./template-service
   container_name: c-service
   environment:
     - spring.application.name=c
   depends_on:
     - "eureka"
     - "kafka"
     - "fluentd"
   logging:
     driver: "fluentd"
     options:
       fluentd-address: localhost:24224
       tag: c-service.allLog

  # Zuul
  zuul:
    build:
      context: ./zuul-gateway
    container_name: zuul
    ports:
      - "8080:8080"
    depends_on:
      - "eureka"

  #Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  # Kafka
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_HOST_IP:-10.11.1.111}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "a:1:1,b:1:1,c:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
# ELASTIC STACK (EFK)
  fluentd:
    container_name: fluentd
    build: ./fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - "es01"


  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  kib01:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    depends_on:
      - "es01"

volumes:
  data01:
    driver: local